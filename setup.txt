At the moment, we can manually launch the TurtleBot in a simulated environment
within a custom world and instruct it to move to a given point in the world
(using ACML) via the following:

  roslaunch turtlebot_gazebo turtlebot_world.launch world_file:=<WORLD_FILE> &
  roslaunch turtlebot_gazebo amcl_demo.launch world_file:=<WORLD_FILE> &
  rostopic pub /move_base_simple/goal geometry_msgs/PoseStamped \
    '{ header:  { frame_id: "base_link" }, pose: { position: { x: -1.0, y: 0 }, orientation: { x: 0, y: 0, z: 0, w: 1.0}}}'

Can we use rostest to incorporate this into a single, parameterised integration test
and to check for plan completion?

In order to get this to work with the source code version of the TurtleBot, we
need to fix a path-related bug in one of the launch files.

  sed -i "s#includes/amcl.launch.xml#includes/amcl/amcl.launch.xml#" \
    /catkin_ws/src/turtlebot_simulator/turtlebot_gazebo/launch
